#!/usr/bin/env bash

print_help() {
	echo "spoon - ssh into ec2 instances easily"
	echo "usage: spoon <identifier>"
}

has_short_flag() {
	flag="$1"
	shift
	args="$@"
	for arg in $args; do
		if [ "${arg:0:1}" = - ] && [ "${arg:1:1}" != - ] && [[ "$arg" =~ "$flag" ]]; then
			return 0
		fi
	done
	return 1
}

has_long_flag() {
	flag="$1"
	shift
	args="$@"
	for arg in $args; do
		if [ "${arg:0:2}" = -- ] && [[ "$arg" == --"$flag" ]]; then
			return 0
		fi
	done
	return 1
}

query_aws() {
	aws ec2 describe-instances --query 'Reservations[*].Instances[*].{id: InstanceId, ip: PublicIpAddress, state: State.Name, service: (Tags[?Key == `"Name"`].Value)[0]}[0]' "${@}"
}

query_aws_by_name() {
	query_aws --filters "Name=tag:Name,Values=*$1*"
}

query_aws_by_id() {
	query_aws --instance-ids "$1"
}

################################################
################################################
################################################

if [[ $# -lt 1 ]]; then
	print_help
	exit 1
fi

if has_short_flag h "$@" || has_long_flag 'help' "$@"; then
	print_help
	exit 0
fi

if has_short_flag i "$@" || has_long_flag 'instance-id' "$@"; then
	use_instance_id=1
else
	use_instance_id=0
fi

specifier="${*: -1}"
if [[ $use_instance_id = 1 ]]; then
	aws_response=$(query_aws_by_id $specifier)
else
	aws_response=$(query_aws_by_name $specifier)
fi

echo "$aws_response"
